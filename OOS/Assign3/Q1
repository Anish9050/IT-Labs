import java.util.Arrays;

public class GenericSort {
    public static <T extends Comparable<T>> void mergeSort(T[] array) {
        if (array == null || array.length < 2) {
            return;
        }
        mergeSortHelper(array, 0, array.length - 1);
    }

    private static <T extends Comparable<T>> void mergeSortHelper(T[] array, int left, int right) {
        if (left < right) {
            int mid = left + (right - left) / 2;
            mergeSortHelper(array, left, mid);
            mergeSortHelper(array, mid + 1, right);
            merge(array, left, mid, right);
        }
    }

    private static <T extends Comparable<T>> void merge(T[] array, int left, int mid, int right) {
        int leftSize = mid - left + 1;
        int rightSize = right - mid;

        T[] leftArray = Arrays.copyOfRange(array, left, mid + 1);
        T[] rightArray = Arrays.copyOfRange(array, mid + 1, right + 1);

        int i = 0, j = 0, k = left;
        while (i < leftSize && j < rightSize) {
            if (leftArray[i].compareTo(rightArray[j]) <= 0) {
                array[k++] = leftArray[i++];
            } else {
                array[k++] = rightArray[j++];
            }
        }

        while (i < leftSize) {
            array[k++] = leftArray[i++];
        }
        while (j < rightSize) {
            array[k++] = rightArray[j++];
        }
    }

    public static void main(String[] args) {
        Integer[] intArray = {5, 2, 9, 1, 5, 6};
        System.out.println("Initial Array is:" + Arrays.toString(intArray));
        mergeSort(intArray);
        System.out.println("Sorted Integer Array: " + Arrays.toString(intArray));

        String[] strArray = {"apple", "orange", "banana", "grape"};
        System.out.println("Initial Array is:" + Arrays.toString(strArray));
        mergeSort(strArray);
        System.out.println("Sorted String Array: " + Arrays.toString(strArray));
    }
}
